import{_ as t,r as o,o as c,c as i,b as e,a as s,F as r,d as n,e as l}from"./app.13bcb57a.js";const p={},d=e("h1",{id:"configuration-de-la-connexion-a-l-exchange",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration-de-la-connexion-a-l-exchange","aria-hidden":"true"},"#"),n(" Configuration de la connexion \xE0 l'exchange")],-1),u=e("p",null,"Pour le moment, nous avons seulement lanc\xE9 des tests en local sans jamais s'\xEAtre connect\xE9 \xE0 un vrai exchange. Maintenant, supposons que notre strat\xE9gie est pr\xEAte et que nous voulons nous lancer dans le grand bain en utilisant, par exemple, l'exchange Kucoin. TODO LIEN",-1),g=n("La premi\xE8re \xE9tape est d'ajouter la librairie XChange correspondante \xE0 l'exchange que vous souhaitez utiliser. C'est un peu comme ajouter un driver JDBC. Allez sur "),h={href:"https://github.com/knowm/XChange",target:"_blank",rel:"noopener noreferrer"},k=n("XChange"),m=n(", trouver le r\xE9pertoire correspondant, dans notre cas : "),v={href:"https://github.com/knowm/XChange/tree/develop/xchange-kucoin",target:"_blank",rel:"noopener noreferrer"},_=n("xchange-kucoin directory"),x=n(" ."),b=n("Dans ce r\xE9pertoire, nous devons ensuite trouver la classe qui h\xE9rite de "),f=e("code",null,"BaseExchange",-1),y=n(" et qui impl\xE9mente "),C=e("code",null,"\u0300Exchange",-1),E=n(". Dans notre cas, il s'agit de "),I={href:"https://github.com/knowm/XChange/blob/develop/xchange-kucoin/src/main/java/org/knowm/xchange/kucoin/KucoinExchange.java",target:"_blank",rel:"noopener noreferrer"},w=n("org.knowm.xchange.kucoin.KucoinExchange"),N=n(" . Le nom de cette classe sera utilis\xE9e comme "),j=e("code",null,"driver-class-name",-1),q=n(" dans le fichier "),L=e("code",null,"application.properties",-1),X=n("."),B=l(`<p>Nous pouvons donc d\xE9sormais \xE9diter le fichier qui se trouve dans \xE0 cet endroit : <code>src/main/resources/application.properties</code>.</p><p>Voici un exemple :</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">cassandre.trading.bot.exchange.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">org.knowm.xchange.kucoin.KucoinExchange</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.username</span><span class="token punctuation">=</span><span class="token value attr-value">kucoin.cassandre.test@gmail.com</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.passphrase</span><span class="token punctuation">=</span><span class="token value attr-value">cassandre</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.key</span><span class="token punctuation">=</span><span class="token value attr-value">61d0c8a041a5330001d0d59c</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.secret</span><span class="token punctuation">=</span><span class="token value attr-value">79edb229-a9c8-449d-a476-04689eaf376b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nous devons aussi ajouter la librairie XChange dans votre fichier <code>pom.xml</code> (La valeur <code>artifactId</code> est le nom du dossier Github).</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.knowm.xchange<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xchange-kucoin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dernier point, comme nous allons lancer le bot en production, les deux modes (dry &amp; sandbox) doivent tous les deux \xEAtre \xE0 <code>false</code>.</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">cassandre.trading.bot.exchange.modes.sandbox</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.modes.dry</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function D(V,K){const a=o("ExternalLinkIcon");return c(),i(r,null,[d,u,e("p",null,[g,e("a",h,[k,s(a)]),m,e("a",v,[_,s(a)]),x]),e("p",null,[b,f,y,C,E,e("a",I,[w,s(a)]),N,j,q,L,X]),B],64)}var F=t(p,[["render",D],["__file","exchange-configuration.html.vue"]]);export{F as default};
