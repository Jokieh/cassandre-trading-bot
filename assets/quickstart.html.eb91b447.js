import{_ as i,r as c,o as l,c as r,b as s,a,w as p,F as u,d as n,e as t}from"./app.cccd94c7.js";const d={},k=s("h1",{id:"quickstart",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#quickstart","aria-hidden":"true"},"#"),n(" Quickstart")],-1),v={class:"custom-container tip"},m=s("p",{class:"custom-container-title"},"TIP",-1),b=n('If you are new to trading, you can read our tutorial "'),g=n("Trading basics"),h=n('".'),_=s("h2",{id:"create-your-project",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#create-your-project","aria-hidden":"true"},"#"),n(" Create your project")],-1),f=n("If you don't have an existing spring boot project, you can use our "),y={href:"https://search.maven.org/search?q=a:cassandre-trading-bot-spring-boot-starter-basic-archetype",target:"_blank",rel:"noopener noreferrer"},w=n("maven archetype"),T=n(" to generate one:"),S=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn archetype:generate <span class="token punctuation">\\</span>
-DarchetypeGroupId<span class="token operator">=</span>tech.cassandre.trading.bot <span class="token punctuation">\\</span>
-DarchetypeArtifactId<span class="token operator">=</span>cassandre-trading-bot-spring-boot-starter-basic-archetype <span class="token punctuation">\\</span>
-DarchetypeVersion<span class="token operator">=</span><span class="token number">5.0</span>.8 <span class="token punctuation">\\</span>
-DgroupId<span class="token operator">=</span>com.mycompany.app <span class="token punctuation">\\</span>
-DartifactId<span class="token operator">=</span>my-app <span class="token punctuation">\\</span>
-Dversion<span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token punctuation">\\</span>
-Dpackage<span class="token operator">=</span>com.mycompany.app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The created project will have the following structure and files:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>my-app/
\u251C\u2500\u2500 pom.xml
\u2514\u2500\u2500 src
    \u251C\u2500\u2500 main
    \u2502   \u251C\u2500\u2500 java
    \u2502   \u2502   \u2514\u2500\u2500 com
    \u2502   \u2502       \u2514\u2500\u2500 mycompany
    \u2502   \u2502           \u2514\u2500\u2500 app
    \u2502   \u2502               \u251C\u2500\u2500 Application.java
    \u2502   \u2502               \u251C\u2500\u2500 package-info.java
    \u2502   \u2502               \u2514\u2500\u2500 SimpleStrategy.java
    \u2502   \u2514\u2500\u2500 resources
    \u2502       \u251C\u2500\u2500 application.properties
    \u2502       \u251C\u2500\u2500 user-main.tsv
    \u2502       \u2514\u2500\u2500 user-trade.tsv
    \u2514\u2500\u2500 test
        \u251C\u2500\u2500 java
        \u2502   \u2514\u2500\u2500 com
        \u2502       \u2514\u2500\u2500 mycompany
        \u2502           \u2514\u2500\u2500 app
        \u2502               \u2514\u2500\u2500 SimpleStrategyTest.java
        \u2514\u2500\u2500 resources
            \u251C\u2500\u2500 application.properties
            \u251C\u2500\u2500 tickers-btc-usdt.tsv
            \u251C\u2500\u2500 user-main.tsv
            \u2514\u2500\u2500 user-trade.tsv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="review-configuration" tabindex="-1"><a class="header-anchor" href="#review-configuration" aria-hidden="true">#</a> Review configuration</h2><p>Your bot configuration is located in <code>src/main/resources/application.properties</code>:</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment">#</span>
<span class="token comment"># Exchange configuration.</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">kucoin</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.username</span><span class="token punctuation">=</span><span class="token value attr-value">kucoin.cassandre.test@gmail.com</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.passphrase</span><span class="token punctuation">=</span><span class="token value attr-value">cassandre</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.key</span><span class="token punctuation">=</span><span class="token value attr-value">6054ad25365ac6000689a998</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.secret</span><span class="token punctuation">=</span><span class="token value attr-value">af080d55-afe3-47c9-8ec1-4b479fbcc5e7</span>
<span class="token comment">#</span>
<span class="token comment"># Modes.</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.modes.sandbox</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.modes.dry</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token comment">#</span>
<span class="token comment"># Exchange API calls rates (In ms or standard ISO 8601 duration like &#39;PT5S&#39;).</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.rates.account</span><span class="token punctuation">=</span><span class="token value attr-value">2000</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.rates.ticker</span><span class="token punctuation">=</span><span class="token value attr-value">2000</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.rates.trade</span><span class="token punctuation">=</span><span class="token value attr-value">2000</span>
<span class="token comment">#</span>
<span class="token comment"># Database configuration.</span>
<span class="token key attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">org.hsqldb.jdbc.JDBCDriver</span>
<span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:hsqldb:mem:cassandre</span>
<span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">sa</span>
<span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),D={class:"custom-container tip"},O=s("p",{class:"custom-container-title"},"TIP",-1),I=n("Please, create and configure your own Kucoin account. You can learn how to do it "),C=n("here"),A=n("."),x=t(`<h2 id="explore-sources" tabindex="-1"><a class="header-anchor" href="#explore-sources" aria-hidden="true">#</a> Explore sources</h2><p>The <code>src/main/java/com/mycompany/app/Application.java</code> file is a classical spring boot Application.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mycompany<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Application start.
 */</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>src/main/java/com/mycompany/app/SimpleStrategy.java</code> is the strategy executed by the bot:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mycompany<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>market<span class="token punctuation">.</span></span><span class="token class-name">TickerDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>position<span class="token punctuation">.</span></span><span class="token class-name">PositionDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>trade<span class="token punctuation">.</span></span><span class="token class-name">OrderDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>trade<span class="token punctuation">.</span></span><span class="token class-name">TradeDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">AccountDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">BasicCassandreStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">CassandreStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CurrencyDTO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CurrencyPairDTO</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Simple strategy.
 */</span>
<span class="token annotation punctuation">@CassandreStrategy</span><span class="token punctuation">(</span>strategyName <span class="token operator">=</span> <span class="token string">&quot;Simple strategy&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SimpleStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCassandreStrategy</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRequestedCurrencyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// We only ask BTC/USDT tickers (Base currency : BTC / Quote currency : USDT).</span>
        <span class="token keyword">return</span> <span class="token class-name">Set</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTradeAccount</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> accounts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// From all the accounts we have on the exchange, we must return the one we use for trading.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>accounts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> accounts<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> accounts<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a <span class="token operator">-&gt;</span> <span class="token string">&quot;trade&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onAccountsUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> accounts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here, we will receive an AccountDTO each time there is a change on your account.</span>
        accounts<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>account <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about an account : &quot;</span> <span class="token operator">+</span> account<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTickersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">,</span> <span class="token class-name">TickerDTO</span><span class="token punctuation">&gt;</span></span> tickers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here we will receive all tickers we required from the exchange.</span>
        tickers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>ticker <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a ticker : &quot;</span> <span class="token operator">+</span> ticker<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onOrdersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">OrderDTO</span><span class="token punctuation">&gt;</span></span> orders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here, we will receive an OrderDTO each time order data has changed on the exchange.</span>
        orders<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>order <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about an order : &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTradesUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TradeDTO</span><span class="token punctuation">&gt;</span></span> trades<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here, we will receive a TradeDTO each time trade data has changed on the exchange.</span>
        trades<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>trade <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a trade : &quot;</span> <span class="token operator">+</span> trade<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPositionsUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">PositionDTO</span><span class="token punctuation">&gt;</span></span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here, we will receive a PositionDTO each time a position has changed.</span>
        positions<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>position <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a position : &quot;</span> <span class="token operator">+</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPositionsStatusUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">PositionDTO</span><span class="token punctuation">&gt;</span></span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Here, we will receive a PositionDTO each time a position status has changed.</span>
        positions<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>position <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a position status : &quot;</span> <span class="token operator">+</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),P=n("A Cassandre strategy is a class annotated with "),j={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},E=n("@CassandreStrategy"),R=n(" and extending "),B={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/BasicCassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},U=n("BasicCassandreStrategy"),N=n(" or "),q={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/BasicTa4jCassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},H=n("BasicTa4jCassandreStrategy"),G=n("."),F=s("p",null,"This is how it works:",-1),M=n("In "),L={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategyInterface.html#getRequestedCurrencyPairs%28%29",target:"_blank",rel:"noopener noreferrer"},z=n("getRequestedCurrencyPairs()"),X=n(", you return the list of currency pairs tickers you want to receive from the exchange."),J=n("On the exchange, you usually have several accounts, and Cassandre needs to know which one of your accounts is the trading one. To do so, you have to implement the "),K={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategyInterface.html#getTradeAccount%28java.util.Set%29",target:"_blank",rel:"noopener noreferrer"},Y=n("getTradeAccount()"),V=n(" method, which gives you as a parameter the list of accounts you own on the exchange, and from that list, you have to return the one you use for trading."),Q=n("If there is a change in your account data, "),W={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onAccountsUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},Z=n("onAccountsUpdates()"),$=n(" will be called."),nn=n("When new tickers are available, "),sn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onTickersUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},an=n("onTickersUpdates()"),en=n(" will be called."),tn=n("If there is a change in your orders, "),on={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onOrdersUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},pn=n("onOrdersUpdates()"),cn=n(" will be called."),ln=n("If there is a change in your trades, "),rn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onTradesUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},un=n("onTradesUpdates()"),dn=n(" will be called."),kn=n("If there is a change in your positions, "),vn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onPositionsUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},mn=n("onPositionsUpdates()"),bn=n(" will be called."),gn=n("If there is a change in your position status, "),hn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onPositionsStatusUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},_n=n("onPositionsStatusUpdates()"),fn=n(" will be called."),yn=t(`<h2 id="manage-orders-and-positions" tabindex="-1"><a class="header-anchor" href="#manage-orders-and-positions" aria-hidden="true">#</a> Manage orders and positions</h2><p>You can create an order this way:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTickersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">,</span> <span class="token class-name">TickerDTO</span><span class="token punctuation">&gt;</span></span> tickers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token function">createBuyMarketOrder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;0,001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is the list of available methods to manage orders:</p>`,4),wn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createBuyMarketOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},Tn=n("createBuyMarketOrder()"),Sn=n("."),Dn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createSellMarketOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},On=n("createSellMarketOrder()"),In=n("."),Cn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createBuyLimitOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},An=n("createBuyLimitOrder()"),xn=n("."),Pn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createSellLimitOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},jn=n("createSellLimitOrder()"),En=n("."),Rn={class:"custom-container tip"},Bn=s("p",{class:"custom-container-title"},"TIP",-1),Un=n("Inside your strategy, you can call "),Nn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#canBuy%28tech.cassandre.trading.bot.dto.user.AccountDTO,tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},qn=n("canBuy()"),Hn=n(" and "),Gn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#canSell%28tech.cassandre.trading.bot.dto.util.CurrencyDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},Fn=n("canSell()"),Mn=n(" methods to see if your account has enough money to buy or sell assets."),Ln=t(`<p>Cassandre trading bot also provides positions to manage your trading automatically:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Create rules.</span>
<span class="token class-name">PositionRulesDTO</span> rules <span class="token operator">=</span> <span class="token class-name">PositionRulesDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">stopGainPercentage</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">stopLossPercentage</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Create a position.</span>
<span class="token function">createLongPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;0,001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                rules<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),zn=n("First, we created a "),Xn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/dto/position/PositionRulesDTO.html",target:"_blank",rel:"noopener noreferrer"},Jn=n("rule"),Kn=n(" saying this position should be closed if the calculated gain is more than 10% or if the loss is more than 5%."),Yn=n("Then we called the "),Vn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createLongPosition(tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,tech.cassandre.trading.bot.dto.position.PositionRulesDTO)",target:"_blank",rel:"noopener noreferrer"},Qn=n("createLongPosition()"),Wn=n(" method. This will automatically create a buy order. From now, for every ticker received, Cassandre will check the gain or loss made on this position; if it triggers one of the rules, Cassandre will automatically create a sell order to close the position."),Zn={class:"custom-container tip"},$n=s("p",{class:"custom-container-title"},"TIP",-1),ns=n("You can learn more about positions in the "),ss=n("position chapter"),as=n("."),es=t(`<h2 id="run-the-bot-and-the-strategy" tabindex="-1"><a class="header-anchor" href="#run-the-bot-and-the-strategy" aria-hidden="true">#</a> Run the bot and the strategy</h2><p>In the project folder, run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn spring-boot:run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The logs should display something like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>  <span class="token builtin class-name">.</span>   ____          _            __ _ _
 /<span class="token punctuation">\\</span><span class="token punctuation">\\</span> / ___<span class="token string">&#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\
( ( )\\___ | &#39;</span>_ <span class="token operator">|</span> <span class="token string">&#39;_| | &#39;</span>_ <span class="token punctuation">\\</span>/ _\` <span class="token operator">|</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span>
 <span class="token punctuation">\\</span><span class="token punctuation">\\</span>/  ___<span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span>_<span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span>  <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
  <span class="token string">&#39;  |____| .__|_| |_|_| |_\\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.4.0)

19:06:04 - Starting Application using Java 11.0.9.1 on straumat-pc-portable with PID 158157 (/home/straumat/tmp/my-app/target/classes started by straumat in /home/straumat/tmp/my-app)
19:06:04 - No active profile set, falling back to default profiles: default
19:06:04 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
19:06:04 - Finished Spring Data repository scanning in 4 ms. Found 0 JPA repository interfaces.
19:06:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
19:06:04 - Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.
19:06:04 - HikariPool-1 - Starting...
19:06:04 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
19:06:04 - HikariPool-1 - Start completed.
19:06:05 - Successfully acquired change log lock
19:06:05 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
19:06:05 - Reading from PUBLIC.DATABASECHANGELOG
19:06:05 - Table EXCHANGE_ACCOUNTS created
19:06:05 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
19:06:05 - Table STRATEGIES created
19:06:05 - Auto-increment added to STRATEGIES.ID
19:06:05 - Table POSITIONS created
19:06:05 - Auto-increment added to POSITIONS.ID
19:06:05 - Table ORDERS created
19:06:05 - Auto-increment added to ORDERS.ID
19:06:05 - Table TRADES created
19:06:05 - Auto-increment added to TRADES.ID
19:06:05 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
19:06:05 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
19:06:05 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
19:06:05 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
19:06:05 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
19:06:05 - Foreign key constraint added to TRADES (FK_ORDER_ID)
19:06:05 - Index IDX_STRATEGIES_STRATEGY_ID created
19:06:05 - Index IDX_POSITIONS_POSITION_ID created
19:06:05 - Index IDX_POSITIONS_STATUS created
19:06:05 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
19:06:05 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
19:06:05 - Index IDX_ORDERS_ORDER_ID created
19:06:05 - Index IDX_TRADES_TRADE_ID created
19:06:05 - Index IDX_TRADES_ORDER_ID created
19:06:05 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 34ms
19:06:05 - Successfully released change log lock
19:06:05 - Initializing ExecutorService &#39;</span>applicationTaskExecutor<span class="token string">&#39;
19:06:05 - HHH000204: Processing PersistenceUnitInfo [name: default]
19:06:05 - HHH000412: Hibernate ORM core version 5.4.27.Final
19:06:05 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
19:06:05 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
19:06:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
19:06:06 - Initialized JPA EntityManagerFactory for persistence unit &#39;</span>default<span class="token string">&#39;
19:06:06 - Calling Remote Init...
19:06:07 - ExchangeConfiguration - Dry mode is ON
19:06:07 - Adding account &#39;</span>main<span class="token string">&#39;
19:06:07 - - Adding balance 99.0001 BTC
19:06:07 - Adding account &#39;</span>trade<span class="token string">&#39;
19:06:07 - - Adding balance 1 BTC
19:06:07 - - Adding balance 100000 USDT
19:06:07 - - Adding balance 10 ETH
19:06:08 - ExchangeConfiguration - Connection to kucoin successful
19:06:08 - ExchangeConfiguration - Supported currency pairs : BTC/USDT 
19:06:08 - ExchangeConfiguration - exchange configuration saved in database ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com)
19:06:08 - StrategyConfiguration - Running strategy &#39;</span>Simple strategy&#39;
<span class="token number">19</span>:06:08 - StrategyConfiguration - The strategy requires the following currency pair<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> BTC/USDT
<span class="token number">19</span>:06:08 - Triggering deferred initialization of Spring Data repositories\u2026
<span class="token number">19</span>:06:08 - Spring Data repositories initialized<span class="token operator">!</span>
<span class="token number">19</span>:06:08 - No TaskScheduler/ScheduledExecutorService bean found <span class="token keyword">for</span> scheduled processing
<span class="token number">19</span>:06:08 - Started Application <span class="token keyword">in</span> <span class="token number">4.975</span> seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">5.193</span><span class="token punctuation">)</span>
Received information about an account <span class="token builtin class-name">:</span> AccountDTO<span class="token punctuation">(</span>accountId<span class="token operator">=</span>main, <span class="token assign-left variable">name</span><span class="token operator">=</span>main, <span class="token assign-left variable">features</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">balances</span><span class="token operator">=</span><span class="token punctuation">{</span>BTC<span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>BTC, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">99.0001</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Received information about an account <span class="token builtin class-name">:</span> AccountDTO<span class="token punctuation">(</span>accountId<span class="token operator">=</span>trade, <span class="token assign-left variable">name</span><span class="token operator">=</span>trade, <span class="token assign-left variable">features</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">balances</span><span class="token operator">=</span><span class="token punctuation">{</span>BTC<span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>BTC, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">1</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span>, <span class="token assign-left variable">USDT</span><span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>USDT, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">100000</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span>, <span class="token assign-left variable">ETH</span><span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>ETH, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">10</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Received information about a ticker <span class="token builtin class-name">:</span> TickerDTO<span class="token punctuation">(</span>currencyPair<span class="token operator">=</span>BTC/USDT, <span class="token assign-left variable">open</span><span class="token operator">=</span>null, <span class="token assign-left variable">last</span><span class="token operator">=</span><span class="token number">37072.9</span>, <span class="token assign-left variable">bid</span><span class="token operator">=</span><span class="token number">37070.3</span>, <span class="token assign-left variable">ask</span><span class="token operator">=</span><span class="token number">37072.9</span>, <span class="token assign-left variable">high</span><span class="token operator">=</span><span class="token number">37250.3</span>, <span class="token assign-left variable">low</span><span class="token operator">=</span><span class="token number">34400</span>, <span class="token assign-left variable">vwap</span><span class="token operator">=</span>null, <span class="token assign-left variable">volume</span><span class="token operator">=</span><span class="token number">74075.19293933</span>, <span class="token assign-left variable">quoteVolume</span><span class="token operator">=</span><span class="token number">2677417785.328956311</span>, <span class="token assign-left variable">bidSize</span><span class="token operator">=</span>null, <span class="token assign-left variable">askSize</span><span class="token operator">=</span>null, <span class="token assign-left variable">timestamp</span><span class="token operator">=</span><span class="token number">2021</span>-02-03T19:06:08.055+01:00<span class="token punctuation">[</span>Europe/Paris<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Kucoin sandbox is having some issues right now. You should create your own exchange account and configure Cassandre accordingly.</p></div>`,6);function ts(os,ps){const o=c("RouterLink"),e=c("ExternalLinkIcon");return l(),r(u,null,[k,s("div",v,[m,s("p",null,[b,a(o,{to:"/ressources/trading-basics.html"},{default:p(()=>[g]),_:1}),h])]),_,s("p",null,[f,s("a",y,[w,a(e)]),T]),S,s("div",D,[O,s("p",null,[I,a(o,{to:"/ressources/how-tos/how-to-create-a-kucoin-account.html"},{default:p(()=>[C]),_:1}),A])]),x,s("p",null,[P,s("a",j,[E,a(e)]),R,s("a",B,[U,a(e)]),N,s("a",q,[H,a(e)]),G]),F,s("ul",null,[s("li",null,[M,s("a",L,[z,a(e)]),X]),s("li",null,[J,s("a",K,[Y,a(e)]),V]),s("li",null,[Q,s("a",W,[Z,a(e)]),$]),s("li",null,[nn,s("a",sn,[an,a(e)]),en]),s("li",null,[tn,s("a",on,[pn,a(e)]),cn]),s("li",null,[ln,s("a",rn,[un,a(e)]),dn]),s("li",null,[kn,s("a",vn,[mn,a(e)]),bn]),s("li",null,[gn,s("a",hn,[_n,a(e)]),fn])]),yn,s("ul",null,[s("li",null,[s("a",wn,[Tn,a(e)]),Sn]),s("li",null,[s("a",Dn,[On,a(e)]),In]),s("li",null,[s("a",Cn,[An,a(e)]),xn]),s("li",null,[s("a",Pn,[jn,a(e)]),En])]),s("div",Rn,[Bn,s("p",null,[Un,s("a",Nn,[qn,a(e)]),Hn,s("a",Gn,[Fn,a(e)]),Mn])]),Ln,s("p",null,[zn,s("a",Xn,[Jn,a(e)]),Kn]),s("p",null,[Yn,s("a",Vn,[Qn,a(e)]),Wn]),s("div",Zn,[$n,s("p",null,[ns,a(o,{to:"/learn/position-management.html"},{default:p(()=>[ss]),_:1}),as])]),es],64)}var is=i(d,[["render",ts],["__file","quickstart.html.vue"]]);export{is as default};
