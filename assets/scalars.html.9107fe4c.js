import{_ as r,r as s,o as n,c as o,b as e,a as c,F as i,d as a,e as d}from"./app.cccd94c7.js";const h={},l=e("h1",{id:"scalars",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#scalars","aria-hidden":"true"},"#"),a(" Scalars")],-1),p=e("h3",{id:"about-scalars",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#about-scalars","aria-hidden":"true"},"#"),a(" About scalars")],-1),u={href:"https://graphql.github.io/graphql-spec/June2018/#sec-Scalars",target:"_blank",rel:"noopener noreferrer"},_=a("Scalars"),f=a(" are primitive values: "),b=e("code",null,"Int",-1),g=a(", "),m=e("code",null,"Float",-1),x=a(", "),y=e("code",null,"String",-1),I=a(", "),v=e("code",null,"Boolean",-1),S=a(", or "),T=e("code",null,"ID",-1),E=a("."),k=d('<p>When calling the GraphQL API, you must specify nested subfields until you return only scalars.</p><h3 id="bigdecimal" tabindex="-1"><a class="header-anchor" href="#bigdecimal" aria-hidden="true">#</a> BigDecimal</h3><hr><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> Boolean</h3><p>The <code>Boolean</code> scalar type represents <code>true</code> or <code>false</code>.</p><hr><h3 id="datetime" tabindex="-1"><a class="header-anchor" href="#datetime" aria-hidden="true">#</a> DateTime</h3><hr><h3 id="float" tabindex="-1"><a class="header-anchor" href="#float" aria-hidden="true">#</a> Float</h3><p>The <code>Float</code> scalar type represents signed double-precision fractional values as specified by <a href="http://en.wikipedia.org/wiki/IEEE_floating_point">IEEE 754</a>.</p><hr><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> ID</h3><p>The <code>ID</code> scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as <code>&quot;4&quot;</code>) or integer (such as <code>4</code>) input value will be accepted as an ID.</p><hr><h3 id="int" tabindex="-1"><a class="header-anchor" href="#int" aria-hidden="true">#</a> Int</h3><p>The <code>Int</code> scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.</p><hr><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h3><p>The <code>String</code> scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.</p><hr>',20);function B(D,q){const t=s("ExternalLinkIcon");return n(),o(i,null,[l,p,e("p",null,[e("a",u,[_,c(t)]),f,b,g,m,x,y,I,v,S,T,E]),k],64)}var F=r(h,[["render",B],["__file","scalars.html.vue"]]);export{F as default};
